---
title: "analysis"
format: html
editor: source
---


```{r}
library(tidyverse)
library(readxl)
library(drc)
library(ggthemes)
library(broom)
library(patchwork)
```



```{r}
dt1 <- read_excel("data/seed_burial_dt.xlsx", sheet = "6 Months") %>% 
  janitor::clean_names() %>% 
  mutate_if(is_character, as_factor)

dt2 <- read_excel("data/seed_burial_dt.xlsx", sheet = "12 Months") %>% 
  janitor::clean_names() %>% 
  mutate_at(c("viable_seed_as_percent_of_original", "dormancy_level_in_the_seedlot_percent"),
            as.double) %>% 
  mutate_if(is_character, as_factor)

dt3 <- read_excel("data/seed_burial_dt.xlsx", sheet = "24 Months") %>% 
  janitor::clean_names() %>% 
  mutate_if(is_character, as_factor)

dt4 <- read_excel("data/seed_burial_dt.xlsx", sheet = "36 Months") %>% 
  janitor::clean_names() %>% 
  mutate(depth_cm = parse_number(depth_cm)) %>% 
  mutate_if(is_character, as_factor) 

dt5 <- read_excel("data/seed_burial_dt.xlsx", sheet = "36 Months") %>% 
  janitor::clean_names() %>% 
  mutate(depth_cm = parse_number(depth_cm)) %>% 
  mutate_if(is_character, as_factor)

dt6 <- read_excel("data/seed_burial_dt.xlsx", sheet = "48 Months") %>% 
  janitor::clean_names() %>% 
  mutate(depth_cm = parse_number(depth_cm)) %>%
  mutate_if(is_character, as_factor)

dt7 <- read_excel("data/seed_burial_dt.xlsx", sheet = "60 Months") %>% 
  janitor::clean_names() %>% 
  mutate_if(is_character, as_factor) %>% 
  mutate(germination_1_6_days = as.double(germination_1_6_days)) %>% 
  dplyr::select(-germination_1_6_days, -germination_2_12_days, -germination_3_20_days) %>% 
  rename(number_seeds_excavated = no_of_seeds_retreived,
         number_seed_germinated = number_seeds_germinated,
         number_dormant_seed_tz = number_dormant_seeds_tz) 
```





```{r}
dt1 %>% 
  bind_rows(dt2) %>% 
  bind_rows(dt3) %>% 
  bind_rows(dt4) %>% 
  bind_rows(dt5) %>% 
  bind_rows(dt6) %>% 
  bind_rows(dt7) %>% 
  mutate(location = case_when(
    location == "CS" ~ "College Station",
    location == "CC" ~ "Corpus Christi",
    location == "LUB" ~ "Lubbock",
    TRUE ~ as_factor(location)
  )) %>% 
  mutate(species = case_when(
    species == "WH" ~ "waterhemp",
    species == "Waterhemp" ~ "waterhemp",
    species == "PA" ~ "Palmer amaranth",
    species == "Palmer" ~ "Palmer amaranth",
    TRUE ~ as_factor(species)
  )) -> data
```


```{r}
data %>% 
 group_by(species, location, depth_cm, field_rep, number_seeds_buried) %>% 
 count() %>% 
 mutate(retrieval_time_months = 0) %>% 
 mutate(viable_seed_as_percent_of_original = 100) %>% 
 dplyr::select(-n) -> at_zero
```


```{r}
data %>% 
  bind_rows(at_zero) %>% 
  mutate(total_seed_loss = if_else(is.na(total_seed_loss), 0, total_seed_loss)) -> data1
```



```{r}
data1 %>% 
#  filter(retrieval_time_months < 13) %>% 
  ggplot(aes(x=retrieval_time_months, y=total_seed_loss, color=as_factor(depth_cm))) +
  geom_point() +
  geom_smooth() +
  facet_wrap(location ~ species) 

ggsave("figures/raw_figure.png", width = 12, height = 7)
```





```{r}
#| warning: false
drm(viable_seed_as_percent_of_original ~ retrieval_time_months, fct = W1.3(),
  curveid = interaction(species, depth_cm), data=lub_dt) -> lub_full

```

```{r}
#| warning: false 
drm(viable_seed_as_percent_of_original ~ retrieval_time_months, fct = W1.3(),
   curveid = species, data=lub_dt) -> lub_red1
```



```{r}
anova(lub_full, lub_red1)
```


```{r}
#| warning: false 
drm(viable_seed_as_percent_of_original ~ retrieval_time_months, fct = W1.3(),
   data=lub_dt) -> lub_red2
```


```{r}
anova(lub_red1, lub_red2)
```


```{r}
tidy(lub_full)
```

```{r}
AIC(lub_full, lub_red1, lub_red2)
```


```{r}
tidy(lub_full)
```



```{r}
plot(lub_full, type="all")
```




```{r}
# Add predictions to data
lub_dt$predicted <- predict(lub_full)

# Then compute RMSE or ME per group
lub_dt %>%
  group_by(species, depth_cm) %>%
  summarise(
    RMSE = sqrt(mean((viable_seed_as_percent_of_original - predicted)^2)),
    ME = 1 - sum((viable_seed_as_percent_of_original - predicted)^2) /
             sum((viable_seed_as_percent_of_original - mean(viable_seed_as_percent_of_original))^2)
  )
```


```{r}
# Add predictions to data
lub_dt$predicted <- predict(lub_red1)

# Then compute RMSE or ME per group
lub_dt %>%
  group_by(species) %>%
  summarise(
    RMSE = sqrt(mean((viable_seed_as_percent_of_original - predicted)^2)),
    ME = 1 - sum((viable_seed_as_percent_of_original - predicted)^2) /
             sum((viable_seed_as_percent_of_original - mean(viable_seed_as_percent_of_original))^2)
  )
```

```{r}
# Add predictions to data
lub_dt$predicted <- predict(lub_red2)

# Then compute RMSE or ME per group
lub_dt %>%
#  group_by(species) %>%
  summarise(
    RMSE = sqrt(mean((viable_seed_as_percent_of_original - predicted)^2)),
    ME = 1 - sum((viable_seed_as_percent_of_original - predicted)^2) /
             sum((viable_seed_as_percent_of_original - mean(viable_seed_as_percent_of_original))^2)
  )
```

```{r}
plot(lub_red1)
```

```{r}
#| warning: false
newdata <- expand.grid(retrieval_time_months=seq(0, 60, length=60))

broom:::augment.drc(lub_red1, newdata=newdata, conf.int = TRUE) -> pm_lub
```

```{r}
lub_dt %>% 
  ggplot(aes(x=retrieval_time_months, y=viable_seed_as_percent_of_original)) +
  geom_jitter(alpha = 0.1, color="#0072B2", pch = 15, size = 4) +
  geom_point(data = pm_lub %>% 
               mutate(retrieval_time_months = round(retrieval_time_months,0)) %>% 
               filter(retrieval_time_months %in% c(0,6,12,24,36,48,60)), 
             mapping= aes(x = retrieval_time_months, y = .fitted), 
             color="#0072B2", pch = 15, size = 4) +
  geom_line(data = pm_lub, aes(x = retrieval_time_months, y = .fitted), 
            size = 1.2, color="#0072B2") +
  geom_ribbon(data = pm_lub, mapping=aes(x = retrieval_time_months, y = .fitted, 
                                         ymin=.lower, ymax=.upper), 
              alpha=0.1, fill="#0072B2") +
  theme_foundation() +
  facet_grid(~location) +
  labs(x="Month after burial", y="Viable seeds (%)") +
  scale_x_continuous(breaks = c(0, 12, 24, 36, 48, 60)) +
  scale_y_continuous(limits = c(0,105), 
                     breaks = c(0, 25, 50, 75, 100)) +
  theme(legend.background = element_blank(),
        legend.box = element_blank(),
        legend.key = element_blank(),
        axis.title =  element_markdown(size=12),
        axis.text = element_text(size=12),
        strip.text = element_text(size = 12, face = "bold")) +
  guides(fill = "none") -> fig_lub_1



ggsave("figures/Lubbock.png", width = 5, height = 5)
```

```{r}
tidy(lub_red2)
```


```{r}
ED(lub_red2, c(1, 10,50,90, 99), interval = "delta", type = "absolute") %>% 
  as_tibble() %>% 
  mutate(ed = as_factor(c(1, 10, 50, 90, 99))) %>% 
  janitor::clean_names() %>% 
  mutate(location = "Lubbock") %>% 
  mutate_if(is.double, ~round(.,1) #%>% 
#  mutate(ed = case_when(
#    ed == "1" ~ "RM~1~",
#    ed == "10" ~ "RM~10~",
#    ed == "50" ~ "RM~50~",
#    ed == "90" ~ "RM~90~",
#    ed == "99" ~ "RM~99~",
#    TRUE ~ NA
#  )
) -> lub_final
```


```{r}
lub_final %>% 
  ggplot(aes(y=ed, x=estimate, label = estimate)) +
  geom_point(position = position_dodge2(width = 0.7), color="#0072B2", pch = 15, size = 4) +
  geom_linerange(aes(xmin=lower, xmax = upper), position = position_dodge2(width = 0.7), 
                 size = 1.2, color="#0072B2") +
  geom_text(position = position_dodge2(width = 0.7), 
            vjust = 2.2, size = 4, show.legend = FALSE, color="#0072B2") +
  facet_grid(~location) +
  scale_x_continuous(limits=c(0,20), breaks = seq(0,20, by=5)) + 
  theme_foundation() +
  labs(x="Month after burial", y="Viable seeds (%)",
       color="", fill="", label = "") +
  theme(legend.background = element_blank(),
        strip.text = element_text(size = 12, face = "bold"),
        axis.title =  element_markdown(size=12),
        legend.position = "none",
        axis.text.y = element_markdown(size=12),
        axis.text = element_text(size=12)
        ) + 
  guides(fill = "none") -> fig_lub_2

#ggsave("figures/ED Lubbock.png", width = 5, height = 5)
```


```{r}
(fig_lub_1 / fig_lub_2) + 
  plot_annotation(tag_levels = 'A')



ggsave("figures/Combined Lubbock.png", width = 5, height = 10)
```


```{r}
ED(lub_red2, c(10,50,90), interval = "delta", type = "absolute")
```








## College Station 



```{r}
#| warning: false
drm(viable_seed_as_percent_of_original ~ retrieval_time_months, fct = W1.3(),
  curveid = interaction(species, depth_cm), data=cs_dt) -> cs_full

```

```{r}
#| warning: false 
drm(viable_seed_as_percent_of_original ~ retrieval_time_months, fct = W1.3(),
   curveid = species, data=cs_dt) -> cs_red1
```


```{r}
anova(cs_full, cs_red1)
```

```{r}
#| warning: false 
drm(viable_seed_as_percent_of_original ~ retrieval_time_months, fct = W1.3(),
   data=cs_dt) -> cs_red2
```


```{r}
anova(cs_red1, cs_red2)
```




```{r}
tidy(cs_red1)
```

```{r}
plot(cs_red1)
```

```{r}
AIC(cs_full, cs_red1, cs_red2)
```


```{r}
# Add predictions to data
cs_dt$predicted <- predict(cs_full)

# Then compute RMSE or ME per group
cs_dt %>%
  group_by(species, depth_cm) %>%
  summarise(
    RMSE = sqrt(mean((viable_seed_as_percent_of_original - predicted)^2)),
    ME = 1 - sum((viable_seed_as_percent_of_original - predicted)^2) /
             sum((viable_seed_as_percent_of_original - mean(viable_seed_as_percent_of_original))^2)
  )
```


```{r}
# Add predictions to data
cs_dt$predicted <- predict(cs_red1)

# Then compute RMSE or ME per group
cs_dt %>%
  group_by(species) %>%
  summarise(
    RMSE = sqrt(mean((viable_seed_as_percent_of_original - predicted)^2)),
    ME = 1 - sum((viable_seed_as_percent_of_original - predicted)^2) /
             sum((viable_seed_as_percent_of_original - mean(viable_seed_as_percent_of_original))^2)
  )
```

```{r}
# Add predictions to data
cs_dt$predicted <- predict(cs_red2)

# Then compute RMSE or ME per group
lub_dt %>%
#  group_by(species) %>%
  summarise(
    RMSE = sqrt(mean((viable_seed_as_percent_of_original - predicted)^2)),
    ME = 1 - sum((viable_seed_as_percent_of_original - predicted)^2) /
             sum((viable_seed_as_percent_of_original - mean(viable_seed_as_percent_of_original))^2)
  )
```






```{r}
#| warning: false 
newdata <- expand.grid(retrieval_time_months=seq(0, 60, length=60))

newdata1 <- tibble(species="Palmer amaranth", newdata)
newdata2 <- tibble(species="waterhemp", newdata)

nd = rbind(newdata1, newdata2)

broom:::augment.drc(cs_red1, newdata=nd, conf.int = TRUE) -> pm_cs

cs_dt$retrieval_time_months0 <- cs_dt$retrieval_time_months
cs_dt$retrieval_time_months0[cs_dt$retrieval_time_months0==0] <- 0.1
```
 


 

```{r}
cs_dt %>% 
  ggplot(aes(x=retrieval_time_months0, 
             y=viable_seed_as_percent_of_original, pch = species)) +
  geom_line(data = pm_cs, aes(x = retrieval_time_months, y = .fitted, 
                              color=species, shape = species),
            size = 1.2) +
  geom_ribbon(data = pm_cs, mapping=aes(x = retrieval_time_months, y = .fitted, 
                                         ymin=.lower, ymax=.upper, fill=species), 
              alpha=0.1) +
  geom_jitter(aes(color=species, shape = species), alpha=0.1, size = 4) +
  geom_point(data = pm_cs %>% 
               mutate(retrieval_time_months = round(retrieval_time_months,0)) %>% 
               filter(retrieval_time_months %in% c(0,6,12,24,36,48,60)), 
             mapping= aes(x = retrieval_time_months, y = .fitted, 
                          color=species, 
                          shape = species), size = 4) +
  theme_foundation() +
  scale_color_colorblind() +
  scale_fill_colorblind() +
  facet_grid(~location) +
  scale_shape_manual(values = c(16, 18)) +
  labs(x="Month after burial", 
       y="Viable seeds (%)") +
  scale_x_continuous(breaks = c(0, 12, 24, 36, 48, 60)) +
  scale_y_continuous(limits = c(0,105), 
                     breaks = c(0, 25, 50, 75, 100)) +
  theme(legend.background = element_blank(),
        legend.title = element_blank(),
        legend.box = element_blank(),
        legend.key = element_blank(),
        axis.title =  element_markdown(size=12),
        axis.text = element_text(size=12),
        strip.text = element_text(size = 12, face = "bold"),
        legend.position = c(0.78,0.91)) +
  guides(fill = "none")  -> fig_cs_1

ggsave("figures/College Station.png", width = 5, height = 5)
```

```{r}
ED(cs_red1, c(10,50,90), interval="delta", type = "absolute")
```

```{r}
ED(cs_red1, c(1, 10,50,90, 99), interval = "delta", type = "absolute") %>% 
  as_tibble() %>% 
  mutate(ed = as_factor(c(1, 10, 50, 90, 99, 1, 10, 50, 90, 99))) %>% 
  mutate(species = rep(c("Palmer amaranth", "waterhemp"), each = 5)) %>% 
  janitor::clean_names() %>% 
  mutate(location = "College Station") %>% 
  mutate_if(is.double, ~round(.,1) # %>% 
#  mutate(ed = case_when(
#    ed == "1" ~ "RM~1~",
#    ed == "10" ~ "RM~10~",
#    ed == "50" ~ "RM~50~",
#    ed == "90" ~ "RM~90~",
#    ed == "99" ~ "RM~99~",
#    TRUE ~ NA
#  )
) -> cs_final
```


```{r}
cs_final %>% 
  ggplot(aes(y=ed, x=estimate, color = species, 
             fill = species, 
             label = estimate,
             shape = species)) +
  geom_point(position = position_dodge2(width = 0.9), size = 4) +
  geom_linerange(aes(xmin=lower, xmax = upper), position = position_dodge2(width = 0.9), 
                 size = 1.2) +
  geom_text(position = position_dodge2(width = 0.9), 
            vjust = 2.2, size = 4, show.legend = FALSE) +
  scale_color_colorblind() +
  scale_fill_colorblind() +
  facet_grid(~location) +
  scale_x_continuous(limits=c(0,21), breaks = seq(0,20, by=5)) + 
  theme_foundation() +
  labs(x="Month after burial", 
       y="Viable seeds (%)",
       color="", fill="", label = "") +
  theme(legend.background = element_blank(),
        strip.text = element_text(size = 12, face = "bold"),
        axis.title =  element_markdown(size=12),
        legend.position = "none",
        axis.text.y = element_markdown(size=12),
        axis.text = element_text(size=12)
        ) + 
  guides(fill = "none") -> fig_cs_2
```


```{r}
fig_cs_2 +
  annotate("segment", x = c(17.5, 12.5, 8.5, 5.3, 3), xend = c(17.5, 12.5, 8.5, 5.3, 3), 
           y = c(0.8, 1.8, 2.8, 3.8, 4.8), yend = c(1.2, 2.2, 3.2, 4.2, 5.2),
           color="purple", linetype= "dashed") +
  annotate("text", x = c(18, 13, 9, 5.8, 3.5),  y = c(1,2,3,4,5),
           color="#333333", 
           label = c("P = 0.69", "P = 0.51", "P < 0.00", "P < 0.00", "P < 0.00"), 
           hjust=0, size = 4) -> fig_cs_2_1

#ggsave("figures/ED College Station.png", width = 5, height = 5)
```


```{r}
EDcomp(cs_red1, c(1, 1))
```




```{r}
(fig_cs_1 / fig_cs_2_1) + 
  plot_annotation(tag_levels = 'A')



ggsave("figures/Combined College Station.png", width = 5, height = 10)
```















```{r}
options(scipen = 999)
EDcomp(cs_red1, c(10,10,50,50,90,90), type = "absolute")
```


## Corpus Christi 


```{r}
data1 %>% filter(location=="Corpus Christi") -> cc_dt
```


```{r}
#| warning: false
drm(viable_seed_as_percent_of_original ~ retrieval_time_months, fct = W1.3(),
  curveid = interaction(species, depth_cm), data=cc_dt) -> cc_full

```

```{r}
#| warning: false 
drm(viable_seed_as_percent_of_original ~ retrieval_time_months, fct = W1.3(),
   curveid = species, data=cc_dt) -> cc_red1
```


```{r}
anova(cc_full, cc_red1)
```


```{r}
#| warning: false 
drm(viable_seed_as_percent_of_original ~ retrieval_time_months, fct = W1.3(),
   data=cc_dt) -> cc_red2
```


```{r}
anova(cc_red1, cc_red2)
```









```{r}
tidy(cc_red1)
```

```{r}
plot(cc_red1)
```

```{r}
library(MuMIn)
```


```{r}
AIC(cc_full, cc_red1, cc_red2)
AICc(cc_full, cc_red1, cc_red2)
```


```{r}
# Add predictions to data
cc_dt$predicted <- predict(cc_full)

# Then compute RMSE or ME per group
cc_dt %>%
  group_by(species, depth_cm) %>%
  summarise(
    RMSE = sqrt(mean((viable_seed_as_percent_of_original - predicted)^2)),
    ME = 1 - sum((viable_seed_as_percent_of_original - predicted)^2) /
             sum((viable_seed_as_percent_of_original - mean(viable_seed_as_percent_of_original))^2)
  )
```


```{r}
# Add predictions to data
cc_dt$predicted <- predict(cc_red1)

# Then compute RMSE or ME per group
cc_dt %>%
  group_by(species) %>%
  summarise(
    RMSE = sqrt(mean((viable_seed_as_percent_of_original - predicted)^2)),
    ME = 1 - sum((viable_seed_as_percent_of_original - predicted)^2) /
             sum((viable_seed_as_percent_of_original - mean(viable_seed_as_percent_of_original))^2)
  )
```

```{r}
# Add predictions to data
cc_dt$predicted <- predict(cc_red2)

# Then compute RMSE or ME per group
cc_dt %>%
#  group_by(species) %>%
  summarise(
    RMSE = sqrt(mean((viable_seed_as_percent_of_original - predicted)^2)),
    ME = 1 - sum((viable_seed_as_percent_of_original - predicted)^2) /
             sum((viable_seed_as_percent_of_original - mean(viable_seed_as_percent_of_original))^2)
  )
```




```{r}
#| warning: false 
newdata <- expand.grid(retrieval_time_months=seq(0, 60, length=60))

newdata1 <- tibble(species="Palmer amaranth", newdata)
newdata2 <- tibble(species="waterhemp", newdata)

nd = rbind(newdata1, newdata2)

broom:::augment.drc(cc_red1, newdata=nd, conf.int = TRUE) -> pm_cc
```
 


 

```{r}
cc_dt %>% 
  ggplot(aes(x=retrieval_time_months, 
             y=viable_seed_as_percent_of_original, shape = species)) +
  geom_line(data = pm_cc, aes(x = retrieval_time_months, y = .fitted, 
                              color=species),
            size = 1.2) +
  geom_ribbon(data = pm_cc, mapping=aes(x = retrieval_time_months, y = .fitted, 
                                         ymin=.lower, ymax=.upper, fill=species), 
              alpha=0.1) +
  geom_jitter(aes(color=species, shape = species), alpha=0.1, size = 4, show.legend = FALSE) +
  geom_point(data = pm_cc %>% 
               mutate(retrieval_time_months = round(retrieval_time_months,0)) %>% 
               filter(retrieval_time_months %in% c(0,6,12,24,36,48,60)), 
             mapping= aes(x = retrieval_time_months, 
                          y = .fitted, 
                          color=species, 
                          shape = species), size = 4) +
  theme_foundation() +
  scale_color_colorblind() +
  scale_fill_colorblind() +
  facet_grid(~location) +
  scale_shape_manual(values = c(16, 18)) +
  labs(x="Month after burial", 
       y="Viable seeds (%)") +
  scale_x_continuous(breaks = c(0, 12, 24, 36, 48, 60)) +
  scale_y_continuous(limits = c(0,105), 
                     breaks = c(0, 25, 50, 75, 100)) +
  theme(legend.background = element_blank(),
        legend.title = element_blank(),
        legend.box = element_blank(),
        legend.key = element_blank(),
        axis.title =  element_markdown(size=12),
        axis.text = element_text(size=12),
        strip.text = element_text(size = 12, face = "bold"),
        legend.position = c(0.78,0.91)) +
  guides(fill = "none") -> fig_cc_1


#ggsave("figures/Corpus Christi.png", width = 5, height = 5)
```




```{r}
tidy(cc_red1)
```


```{r}
ED(cc_red1, c(1, 10,50,90, 99), interval = "delta", type = "absolute") %>% 
  as_tibble() %>% 
  mutate(ed = as_factor(c(1, 10, 50, 90, 99, 1, 10, 50, 90, 99))) %>% 
  mutate(species = rep(c("Palmer amaranth", "waterhemp"), each = 5)) %>% 
  janitor::clean_names() %>% 
  mutate(location = "Corpus Christi") %>% 
  mutate_if(is.double, ~round(.,1) #%>% 
#  mutate(ed = case_when(
#    ed == "1" ~ "V~1~",
#    ed == "10" ~ "V~10~",
#    ed == "50" ~ "V~50~",
#    ed == "90" ~ "V~90~",
#    ed == "99" ~ "V~99~",
#    TRUE ~ NA
#  )
) -> cc_final
```







```{r}
cc_final %>% 
  ggplot(aes(y=ed, x=estimate, color = species, 
             fill = species, 
             shape = species,
             label = estimate)) +
  geom_point(position = position_dodge2(width = 0.9), size=4) +
  geom_linerange(aes(xmin=lower, xmax = upper), position = position_dodge2(width = 0.9), 
                 size = 1.2) +
  geom_text(position = position_dodge2(width = 0.9), 
            vjust = 2.2, size = 4, show.legend = FALSE) +
  scale_color_colorblind() +
  scale_fill_colorblind() +
  facet_grid(~location) +
  scale_x_continuous(limits=c(0,130), breaks = seq(0,125, by=25)) + 
  theme_foundation() +
  labs(x="Month after burial", 
       y="Viable seeds (%)",
       color="", fill="", label = "") +
  theme(legend.background = element_blank(),
        strip.text = element_text(size = 12, face = "bold"),
        axis.title =  element_markdown(size=12),
        legend.position = "none",
        axis.text.y = element_markdown(size=12),
        axis.text = element_text(size=12)
        ) + 
  guides(fill = "none") -> fig_cc_2
```


```{r}
fig_cc_2 +
  annotate("segment", x = c(30, 36, 13, 10, 7), xend = c(30, 36, 13, 10, 7), 
           y = c(0.8, 1.8, 2.8, 3.8, 4.8), yend = c(1.2, 2.2, 3.2, 4.2, 5.2),
           color="purple", linetype= "dashed") +
  annotate("text", x = c(33, 38, 15, 12, 9),  y = c(1,2,3,4,5),
           color="#333333", 
           label = c("P < 0.00", "P < 0.00", "P = 0.00", "P = 0.04", "P = 0.22"), 
           hjust=0, size = 4) -> fig_cc_2_1

#ggsave("figures/ED Corpus Christi.png", width = 5, height = 5)
```


```{r}
EDcomp(cc_red1, c(1, 1), type = "absolute")
```





```{r}
(fig_cc_1 / fig_cc_2_1) + 
  plot_annotation(tag_levels = 'A')



ggsave("figures/Combined Corpus Christi.png", width = 5, height = 10)
```





```{r}
library(lmerTest)
library(multcomp)
```

```{r}
library(emmeans)
```
```{r}
library(drc)
```






```{r}
EDcomp(cc_red1, c(50, 50),  type = "absolute") -> ed_test
```





























